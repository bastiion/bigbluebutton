version: '2'

services:
  mongo:
    image: mongo:3.4
    restart: unless-stopped

  redis:
    image: redis
    restart: unless-stopped

  bbb-html5:
    #image: ${TAG_PREFIX}bbb-html5${TAG_SUFFIX}
    image: bastilion/bbb-html5-pre:2.2.5_0
    restart: unless-stopped
    depends_on:
      - mongo
      - redis
    environment:
      PORT: 3000
      MONGO_URL: mongodb://mongo/bbbhtml5
      KURENTO_WS_URL: wss://${SERVER_DOMAIN}/bbb-webrtc-sfu
      #      METEOR_SETTINGS_MODIFIER: ".public.kurento.wsUrl = \"wss://${SERVER_DOMAIN}/bbb-webrtc-sfu\" | .public.kurento.enableVideo = true | .public.kurento.enableScreensharing = true | .public.kurento.chromeDefaultExtensionKey = \"${SCREENSHARE_EXTENSION_KEY}\" | .public.kurento.chromeDefaultExtensionLink = \"${SCREENSHARE_EXTENSION_LINK}\" | .public.kurento.enableVideoStats = true | .public.kurento.enableListenOnly = true"
      KURENTO_EXTENSION_KEY: ${SCREENSHARE_EXTENSION_KEY}
      KURENTO_EXTENSION_LINK: ${SCREENSHARE_EXTENSION_LINK}
      REDIS_HOST: redis
      ROOT_URL: http://127.0.0.1/html5client
    command: [ "dockerize", "-template", "./settings-production.json.tmpl:/usr/share/meteor/bundle/programs/server/assets/app/config/settings-production.json", "node", "main.js" ]
    labels:
      - "traefik.http.routers.bbb-html5.entrypoints=websecure"
      - "traefik.http.routers.bbb-html5.tls=true"
      - "traefik.http.routers.bbb-html5.tls.certresolver=leresolver"
      - "traefik.http.routers.bbb-html5.rule=(Host(`${SERVER_DOMAIN}`) && PathPrefix(`/html5client`)) || (Host(`${SERVER_DOMAIN}`) && PathPrefix(`/_timesync`))"

  bbb-webhooks:
    image: ${TAG_PREFIX}bbb-webhooks${TAG_SUFFIX}
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_HOST: redis
      SHARED_SECRET: ${SHARED_SECRET}
      BEARER_AUTH: 1
      SERVER_DOMAIN: ${SERVER_DOMAIN}
    labels:
      - "traefik.http.routers.bbb-webhooks.entrypoints=websecure"
      - "traefik.http.routers.bbb-webhooks.tls=true"
      - "traefik.http.routers.bbb-webhooks.tls.certresolver=leresolver"
      - "traefik.http.routers.bbb-webhooks.rule=Host(`${SERVER_DOMAIN}`) && PathPrefix(`/bigbluebutton/api/hooks`)"

  bbb-freeswitch:
    image: ${TAG_PREFIX}bbb-freeswitch${TAG_SUFFIX}
    restart: unless-stopped
    depends_on:
      - coturn
    volumes:
      - media-audio:/var/freeswitch/meetings

  bbb-webrtc-sfu:
    image: ${TAG_PREFIX}bbb-webrtc-sfu:latest
    restart: unless-stopped
    depends_on:
      - redis
      - kurento
      - bbb-freeswitch
    environment:
      KURENTO_NAME: kurento
      KURENTO_URL: ws://kurento:8888/kurento
      REDIS_HOST: redis
      FREESWITCH_IP: bbb-freeswitch
      LOG_LEVEL: debug
    labels:
      - "traefik.http.routers.bbb-webrtc-sfu.entrypoints=websecure"
      - "traefik.http.routers.bbb-webrtc-sfu.tls=true"
      - "traefik.http.routers.bbb-webrtc-sfu.tls.certresolver=leresolver"
      - "traefik.http.routers.bbb-webrtc-sfu.rule=Host(`${SERVER_DOMAIN}`) && PathPrefix(`/bbb-webrtc-sfu`)"

  coturn:
    image: ${TAG_PREFIX}bbb-coturn${TAG_SUFFIX}
    restart: unless-stopped
    environment:
      TURN_DOMAIN: ${SERVER_DOMAIN}
      SECRET: ${COTURN_REST_SECRET}
      EXTERNAL_IP: ${EXTERNAL_IP}
      ENABLE_REST_API: 1
      PORT: 3478
    ports:
      - 3478:3478/udp
      - 3478:3478/tcp

  kurento:
    image: ${TAG_PREFIX}bbb-kurento${TAG_SUFFIX}
    restart: unless-stopped
    volumes:
      - media-video:/var/kurento/recordings
      - media-screenshare:/var/kurento/screenshare
    environment:
      STUN_IP: ${EXTERNAL_IP}
      STUN_PORT: 3478

  bbb-apps-akka:
    image: ${TAG_PREFIX}bbb-apps-akka${TAG_SUFFIX}
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      JAVA_OPTS: -Dredis.host=redis

  bbb-fsesl-akka:
    image: ${TAG_PREFIX}bbb-fsesl-akka${TAG_SUFFIX}
    restart: unless-stopped
    depends_on:
      - bbb-freeswitch
      - redis
    command: ["wait-for-it.sh", "bbb-freeswitch:8021", "--timeout=60", "--strict", "--", "/usr/share/bbb-fsesl-akka/bin/bbb-fsesl-akka"]
    environment:
      JAVA_OPTS: -Dredis.host=redis -Dfreeswitch.esl.host=bbb-freeswitch

  bbb-web:
   #image: ${TAG_PREFIX}bbb-web${TAG_SUFFIX}
    image: bastilion/bbb-web-pre:2.2.5_3
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - bigbluebutton:/var/bigbluebutton
      - ./bigbluebutton.properties:/var/lib/tomcat7/webapps/bigbluebutton/WEB-INF/classes/bigbluebutton.properties
    command: [ "dockerize", "-template", "turn-stun-servers.xml.tmpl:/var/lib/tomcat7/webapps/bigbluebutton/WEB-INF/spring/turn-stun-servers.xml", "/docker-entrypoint.sh" ]
    environment:
      SERVER_DOMAIN: ${SERVER_DOMAIN}
      SHARED_SECRET: ${SHARED_SECRET}
      TURN_DOMAIN: ${SERVER_DOMAIN}
      TURN_SECRET: ${COTURN_REST_SECRET}
    labels:
      - "traefik.http.routers.bigbluebutton.entrypoints=websecure"
      - "traefik.http.routers.bigbluebutton.tls=true"
      - "traefik.http.routers.bigbluebutton.tls.certresolver=leresolver"
      - "traefik.http.routers.bigbluebutton.rule=Host(`${SERVER_DOMAIN}`) && PathPrefix(`/bigbluebutton`)"

  bbb-greenlight:
    image: bigbluebutton/greenlight:v2
    restart: unless-stopped
    volumes:
      - greenlight_db:/usr/src/app/db/production
      - greenlight_logs:/usr/src/app/log
    environment:
      BIGBLUEBUTTON_ENDPOINT: https://${SERVER_DOMAIN}/bigbluebutton/
      BIGBLUEBUTTON_SECRET: ${SHARED_SECRET}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      ALLOW_GREENLIGHT_ACCOUNTS: "true"
    labels:
      - "traefik.http.routers.greenlight.entrypoints=websecure"
      - "traefik.http.routers.greenlight.tls=true"
      - "traefik.http.routers.greenlight.tls.certresolver=leresolver"
      - "traefik.http.routers.greenlight.rule=Host(`${SERVER_DOMAIN}`) && PathPrefix(`/b`)"

  # when we're able to setup traefik properly for wss, nginx is no longer needed
  nginx:
    image: ${TAG_PREFIX}bbb-nginx${TAG_SUFFIX}
    restart: unless-stopped
    depends_on:
      - bbb-freeswitch
    environment:
      SERVER_DOMAIN: ${SERVER_DOMAIN}
    labels:
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=leresolver"
      - "traefik.http.routers.nginx.rule=Host(`${SERVER_DOMAIN}`) && PathPrefix(`/ws`)"

  traefik:
    image: traefik:v2.0
    restart: unless-stopped
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    command:
      - --api
      - --api.insecure=true
      - --providers.docker
      - --log.level=DEBUG
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
        #- --certificatesresolvers.leresolver.acme.httpchallenge=true
        #- --certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=http
        #- --certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.leresolver.acme.email=hxwvplovmczz@opayq.com
      - --certificatesresolvers.leresolver.acme.storage=/etc/traefik/acme/acme.json
    volumes:
      - traefik-acme:/etc/traefik/acme/
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
        #labels:
      # global redirect to https
      #- "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      #- "traefik.http.routers.http-catchall.entrypoints=web"
      #- "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # middleware redirect
      #- "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

volumes:
  traefik-acme:
  static:
  bigbluebutton:
  media-audio:
  media-video:
  media-screenshare:
  greenlight_db:
  greenlight_logs:
